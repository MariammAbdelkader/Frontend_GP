import React from "react";
import { loginStyles } from "./LoginStyles";
import {
  Box,
  Button,
  TextField,
  Typography,
  Grid,
  Paper,
  InputAdornment,
  IconButton,
} from "@mui/material";
import { Visibility, VisibilityOff } from "@mui/icons-material";
import { GlobalStyles } from "@mui/material";
import CircularProgress from "@mui/material/CircularProgress";
import LoginContainer from "./LoginContainer";

const LoginPresentation = () => {
  const {
    showPassword,
    handleTogglePassword,
    email,
    setEmail,
    password,
    setPassword,
    errors,
    handleLogin,
    handleSignUp,
    loading,
    loginSuccess,
    verificationCode,
    setVerificationCode,
    handleCodeVerification,
  } = LoginContainer();

  return (
    <Grid
      container
      justifyContent="center"
      alignItems="center"
      sx={loginStyles.gridContainer}>
      <Paper elevation={3} sx={loginStyles.paperContainer}>
        <GlobalStyles
          styles={{
            "html, body, #root": {
              margin: 0,
              padding: 0,
              height: "100%",
              width: "100%",
              backgroundColor: "#0D0259",
              overflowX: "hidden",
            },
          }}
        />
        {loginSuccess ? (
          <>
            <Typography variant="h6" mb={2} textAlign="center">
              Authenticate Your Account
            </Typography>
            <Typography variant="body2" mb={3} textAlign="center">
              Enter the code generated by your 2-factor auth App
            </Typography>

            <Box display="flex" justifyContent="center" gap={2} mb={3}>
              {[0, 1, 2, 3, 4, 5].map((index) => (
                <TextField
                  key={index}
                  inputProps={{
                    maxLength: 1,
                    style: {
                      textAlign: "center",
                      fontSize: "1.5rem",
                      width: "3rem",
                      height: "3rem",
                    },
                  }}
                  value={verificationCode[index] || ""}
                  onChange={(e) => {
                    const value = e.target.value.replace(/[^0-9]/g, "");
                    const newCode =
                      verificationCode.substring(0, index) +
                      value +
                      verificationCode.substring(index + 1);
                    setVerificationCode(newCode);
                  }}
                  sx={{
                    "& .MuiOutlinedInput-root": {
                      borderRadius: "10px",
                    },
                  }}
                />
              ))}
            </Box>

            <Button
              fullWidth
              onClick={handleCodeVerification}
              sx={loginStyles.verificationCodeButton}
              disabled={loading}>
              {loading ? (
                <CircularProgress size={24} color="inherit" />
              ) : (
                "LET’S GO"
              )}
            </Button>
          </>
        ) : (
          <Box sx={loginStyles.leftContainer}>
            <Typography variant="h4" sx={loginStyles.title} ml={20}>
              Shophoria
            </Typography>

            <Typography
              variant="subtitle1"
              align="left"
              sx={loginStyles.fieldTitle}>
              E-mail:
            </Typography>
            <TextField
              fullWidth
              placeholder="hello@dream.com"
              variant="outlined"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              error={!!errors.email}
              helperText={errors.email}
              sx={loginStyles.InputField}
            />

            <Typography
              variant="subtitle1"
              align="left"
              sx={loginStyles.fieldTitle}>
              Password:
            </Typography>
            <TextField
              placeholder="**********"
              type={showPassword ? "text" : "password"}
              variant="outlined"
              fullWidth
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              error={!!errors.password}
              helperText={errors.password}
              sx={loginStyles.InputField}
              InputProps={{
                endAdornment: (
                  <InputAdornment position="end">
                    <IconButton
                      onClick={handleTogglePassword}
                      edge="end"
                      sx={loginStyles.eye}>
                      {showPassword ? (
                        <Visibility sx={{ fontSize: 22 }} />
                      ) : (
                        <VisibilityOff sx={{ fontSize: 22 }} />
                      )}
                    </IconButton>
                  </InputAdornment>
                ),
              }}
            />

            <Typography variant="body2" sx={loginStyles.forgotPassword}>
              Forgot password?
            </Typography>

            {errors.apiError && (
              <Typography color="error" mb={2}>
                {errors.apiError}
              </Typography>
            )}

            <Button
              fullWidth
              onClick={handleLogin}
              sx={loginStyles.loginButton}
              disabled={loading}>
              {loading ? (
                <CircularProgress size={24} color="inherit" />
              ) : (
                "Login"
              )}
            </Button>

            <Typography variant="body2" mt={2} ml={18}>
              Don’t have an account?{" "}
              <span
                style={{
                  color: "#6a6dff",
                  cursor: "pointer",
                  fontWeight: "bold",
                }}
                onClick={handleSignUp}>
                Sign Up
              </span>
            </Typography>
          </Box>
        )}

        <Box sx={loginStyles.rightContainer}>
          <img
            src="/images/Login.png"
            alt="illustration"
            style={loginStyles.rightImage}
          />
        </Box>
      </Paper>
    </Grid>
  );
};

export default LoginPresentation;
